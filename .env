# The domain to be used. Include the protocol and optionally, the port to be used.
URL=http://localhost:3000

# The links used for the JWK tokens that the login microservice produces

#Set to http://172.17.0.1:3000/jwt/ibm/api/cpr_access/jwk if running docker build locally
#Set to the value of URL+/jwt/ibm/api/cpr_access/jwk if running docker build in production environment
#Set to http://localhost:13126/jwt/ibm/api/cpr_access/jwk if running each microservice separately

JWK_ACCESS_URL=http://172.17.0.1:3000/jwt/ibm/api/cpr_access/jwk

#Set to http://172.17.0.1:3000/jwt/ibm/api/cpr_refresh/jwk if running docker build locally
#Set to the value of URL+/jwt/ibm/api/cpr_access/jwk if running docker build in production environment
#Set to http://localhost:13126/jwt/ibm/api/cpr_refresh/jwk if running each microservice separately

JWK_REFRESH_URL=http://172.17.0.1:3000/jwt/ibm/api/cpr_refresh/jwk

# Google OAuth2 credentials. Match those with your OAuth2 credentials at https://console.cloud.google.com/apis/

CLIENT_ID=534454821642-oo29o94uof968636sccv8990ifnlj6di.apps.googleusercontent.com
CLIENT_SECRET=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

# Database name, root username, and root password to be initialized in Docker container.
MONGO_INITDB_DATABASE=cpr
MONGO_INITDB_ROOT_USERNAME=root
MONGO_INITDB_ROOT_PASSWORD=password

# Database authentication credentials. Mongo hostname is defaulted to corresponding Docker's mongo service name.
# Don't change the value of the ports
# If running locally in development enviroment without Docker, set to "true".
LOCALHOST=false
MONGO_PORT=27037
MONGO2_PORT=27038
MONGO3_PORT=27039
MONGO4_PORT=27040
MONGO5_PORT=27041
MONGO_USERNAME=root
MONGO_PASSWORD=password
# This one should be the same as MONGO_INITDB_DATABASE unless you intend to use a different database.
MONGO_DATABASE=cpr


